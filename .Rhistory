credentials <- readRDS("/home/juko/Desktop/GoogleDrive/Dissertation/Infrastruktur_Studie_1/Sharing/ChatDashboard/credentials.rds")
View(credentials)
shiny::runApp()
credentials <- readRDS("/home/juko/Desktop/GoogleDrive/Dissertation/1 - Infrastruktur_Studie/Tools/ChatDashboard/Added Name selection/credentials.rds")
View(credentials)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
display_text[15]
###################################  LANGUAGE SETTINGS ####
# language setting for shinymanager authentication page
# see: https://datastorm-open.github.io/shinymanager/reference/use_language.html
landing_page_language <- "en"
# Check: https://cdn.datatables.net/plug-ins/1.10.11/i18n/ for a
# list of different languages. Insert them by pasting the respective
# link according to the format below
datatable_language <- c('//cdn.datatables.net/plug-ins/1.10.11/i18n/English.json')
# import display text from csv file
ChatDashboard_DisplayText <- read.csv("./www/ChatDashboard_DisplayText.csv")
# Selecting column containing the text you want to display. English and German are preset options
display_text <- ChatDashboard_DisplayText$English
# For changing the display of individual text variables, you can simply edit the file
# ./www/ChatDashboard_DisplayText.csv, add an additional column, and select it above.
###################################  SHINY SETTINGS ####
# Variable passed to WhatsR::parse_chat(). Automatically removes all chat messages from participants that did not post the EXACT consent_message into
# the chat. Setting this variable to NA will not remove any messages.
consent_message <- NA
# variable to control whether to use forwarding per url parameter or rely on pre-defined credentials for authentication
# TODO: If you are using url parameter forwarding, you need to adapt line 879 to extract the participant ID from your referral link.
# Default structure is: www.example-website.com/ChatDashboard?id=TestParticipant | Extracts: TestParticipant
use_forwarding <- FALSE
# Password to use for forwarding via url-parameter (only used if use_forwarding == TRUE)
# TODO: Set this as a character string in line 880
# saving donated files to server if TRUE, will not save any data if not TRUE
save_to_server <- TRUE
# setting upload file size limit
options(shiny.maxRequestSize = 50*1024^2)
# Set column names to be displayed to participants. This needs to be exactly 19 strings
# and does not determine whether these variables are displayed or not, but just how they are named
# in the display to participants
Colnames_ppt_display <- c("Timestamp",
"Sender",
"Sender_anonymized",
"Message",
"Message_simplified",
"Message_words",
"Links",
"Links_anonymized",
"Media",
"Media_anonymized",
"Locations",
"Locations_anonymized",
"Emoji",
"Emoji_description",
"Smilies",
"System_messages",
"Word_count",
"Time_order",
"Display_order")
# Set column names to be automatically excluded because they can contain PII (must occur in Colnames_ppt_display)
Colnames_exclude_pii <- c("Sender",
"Message",
"Message_simplified",
"Message_words",
"Links",
"Media",
"Locations",
"System_messages")
View(ChatDashboard_DisplayText)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
display_text[15]
display_text[3]
display_text[15]
runApp()
runApp()
View(ChatDashboard_DisplayText)
New <- rbind.data.frame(ChatDashboard_DisplayText,c(NA,"Spender Auswahl","Donor Selection"),c(NA,"spender_button","donor_button"),c(NA,"Weiter","Next"))
View(New)
write.csv(New,"ChatDashboard_DisplayText.csv")
display_text
View(New)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
grub("aaa","aaaab")
grep("a","aa")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test_user <- readRDS("/home/juko/Desktop/GoogleDrive/Dissertation/1 - Infrastruktur_Studie/Tools/ChatDashboard/Added Name selection/UserData/TestUser_2024-07-25_21:16:08.574644_3131e781be3ef9d020d72f4211070daf6cca6dcc55d3eb8755bcf7586576ca2886beb4a02a2f01430a97422576e632d0b41ffaf7466b32f1533b4b6580eb39f5.rds")
test_user
attr(test_user)
attributes(test_user)
runApp()
testing <- readRDS("/home/juko/Desktop/GoogleDrive/Dissertation/1 - Infrastruktur_Studie/Tools/ChatDashboard/Added Name selection/UserData/TestUser_2024-07-25_21:22:41.637506_3131e781be3ef9d020d72f4211070daf6cca6dcc55d3eb8755bcf7586576ca2886beb4a02a2f01430a97422576e632d0b41ffaf7466b32f1533b4b6580eb39f5.rds")
attributes(testing)
library(devtools)
devtools::install_github("gesiscss/WhatsR")
library(devtools)
devtools::install_github("gesiscss/WhatsR")
library(devtools)
devtools::install_github("gesiscss/WhatsR")
library(devtools)
devtools::install_github("gesiscss/WhatsR")
install.packages("terra")
install.packages("terra")
unlink("/tmp/RtmpMPHsv8/downloaded_packages", recursive = TRUE)
install.packages("terra")
library(WhatsR)
# creating simulated chatlog (saved in working directory)
simulated_raw_chat <- create_chatlog(language = "english")
simulated_parsed_chat <- parse_chat("Simulated_WhatsR_chatlog.txt")
plot_emoji(simulated_parsed_chat, plot="bar")
attributes(simulated_parsed_chat)
simulated_parsed_chat <- parse_chat("Simulated_WhatsR_chatlog.txt", anon="add")
attributes(simulated_parsed_chat)
shiny::runApp()
test <- readRDS("/home/juko/Desktop/GoogleDrive/Dissertation/1 - Infrastruktur_Studie/Tools/ChatDashboard/Added Name selection/UserData/TestUser_2024-07-25_21:45:38.056112_3131e781be3ef9d020d72f4211070daf6cca6dcc55d3eb8755bcf7586576ca2886beb4a02a2f01430a97422576e632d0b41ffaf7466b32f1533b4b6580eb39f5.rds")
attributes(test)
runApp()
rv$data
attributes(rv$data)
attributes(rv$copy)
test <- readRDS("/home/juko/Desktop/GoogleDrive/Dissertation/1 - Infrastruktur_Studie/Tools/ChatDashboard/Added Name selection/UserData/TestUser_2024-07-25_21:49:15.707458_13824ca663f15e89fde3f4a3d5988f29357d9654cfcda7a4ac2fadee7240cc6d61c35e34c1b11cfd3375083ca66144c35381e87d6430a47f5e8d0c6c76eb431f.rds")
test
attr(test)
attrinutes(test)
attributes(test)
attributes(mtcars)
attributes(mtcars,"test") <- 0
install.packages("terra")
install.packages("terra")
runApp()
attributes(rv$copy2)
attributes(rv$copy)
attributes(rv$copy)["parsedAt"]
as.POSIXct(attributes(rv$copy)["parsedAt"])
attriubutes(rv$copy2)
attributes(rv$copy2)
attr(rv$copy2, "parsedAt") <- attributes(rv$copy)["parsedAt"]
attr(rv$copy2, "language")  <- attributes(rv$copy)["language"]
attr(rv$copy2, "detectedOS")  <- attributes(rv$copy)["detectedOS"]
attributes(rv$copy2)
runApp()
runApp()
test <- readRDS("/home/juko/Desktop/GoogleDrive/Dissertation/1 - Infrastruktur_Studie/Tools/ChatDashboard/Added Name selection/UserData/TestUser_2024-07-25_21:58:50.428931_54bf4249af2f57c3d283ea7e2b4847aded103896323f8a27f69abe22aedcaf0c20fdebe5cd26c8d85d780df3c659f3c820fd745e3f526ad1441aa2807eac51a6.rds")
attributes(test)
attributes(test)$parsedAt
as.POSIXct(attributes(test)$parsedAt)
anytime(attributes(test)$parsedAt)
anytime(as.numeric(attributes(test)$parsedAt))
shiny::runApp()
runApp()
runApp()
shiny::runApp()
library(WhatsR)
create_chatlog()
runApp()
shiny::runApp()
